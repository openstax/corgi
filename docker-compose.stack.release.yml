version: '3.7'
services:
  backend:
    image: 'openstax/corgi-${DOCKER_IMAGE_BACKEND}:${TAG-latest}'
    env_file:
      - env-backend.env
    environment:
      - REVISION=${REVISION}
      - TAG=${TAG}
      - STACK_NAME=${STACK_NAME}
      - DEPLOYED_AT=${DEPLOYED_AT}
      - POSTGRES_SERVER=${POSTGRES_SERVER:-db}
      - POSTGRES_DB=${POSTGRES_DB:-corgi-dev}
      - POSTGRES_USER=${POSTGRES_USER:-corgi-dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD:-trust}
      - SQLALCHEMY_POOL_SIZE=20
      - SQLALCHEMY_MAX_OVERFLOW=10
      - GITHUB_API_TOKEN=${GITHUB_API_TOKEN}
      - GITHUB_OAUTH_ID=${GITHUB_OAUTH_ID}
      - GITHUB_OAUTH_SECRET=${GITHUB_OAUTH_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
    deploy:
      labels:
        - "traefik.http.services.corgi-backend.loadbalancer.server.port=80"
        - "traefik.http.routers.corgi-backend.rule=Host(`${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`) || PathPrefix(`/openapi.json`))"
        - "traefik.tags=${TRAEFIK_TAG}"
        - "traefik.enable=true"
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    logging:
      options:
        awslogs-stream: "${STACK_NAME}_backend"
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK}
      - default

  frontend:
    image: 'openstax/corgi-${DOCKER_IMAGE_FRONTEND}:${TAG-latest}'
    deploy:
      labels:
        - "traefik.http.services.corgi-frontend.loadbalancer.server.port=80"
        - "traefik.http.routers.corgi-frontend.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)"
        - "traefik.tags=${TRAEFIK_TAG}"
        - "traefik.enable=true"
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    logging:
      options:
        awslogs-stream: "${STACK_NAME}_frontend"
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK}
      - default
      
networks:
  default:
    driver: overlay
    internal: true
    ipam:
      driver: default
      config:
        - subnet: "${SUBNET}"
  traefik-public:
    external: true

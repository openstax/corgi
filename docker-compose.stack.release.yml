version: '3.7'
services:
  proxy:
    image: traefik:v1.7
    command: --docker \
      --docker.swarmmode \
      --docker.watch \
      --docker.exposedbydefault=false \
      --constraints=tag==${TRAEFIK_TAG} \
      --logLevel=INFO \
      --accessLog \
      --web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      labels:
        # For the configured domain
        - traefik.frontend.rule=Host:${DOMAIN}
        - traefik.enable=true
        - traefik.port=80
        - traefik.tags=${TRAEFIK_PUBLIC_TAG}
        - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK}
        # Traefik service that listens to HTTP
        - traefik.servicehttp.frontend.entryPoints=http
      placement:
        constraints:
          - node.role == manager
          - node.labels.proxy == true
    logging:
      options:
        awslogs-stream: "${STACK_NAME}_proxy"
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK}
      - default
    secrets:
      - basic-auth-users
    
  backend:
    image: 'openstax/corgi-${DOCKER_IMAGE_BACKEND}:${TAG-latest}'
    env_file:
      - env-backend.env
    environment:
      - REVISION=${REVISION}
      - TAG=${TAG}
      - STACK_NAME=${STACK_NAME}
      - DEPLOYED_AT=${DEPLOYED_AT}
      - POSTGRES_SERVER=${POSTGRES_SERVER:-db}
      - POSTGRES_DB=${POSTGRES_DB:-corgi-dev}
      - POSTGRES_USER=${POSTGRES_USER:-corgi-dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD:-trust}
    deploy:
      labels:
        - traefik.frontend.rule=PathPrefix:/api,/docs,/redoc,/openapi.json
        - traefik.enable=true
        - traefik.port=80
        - traefik.tags=${TRAEFIK_TAG}
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    logging:
      options:
        awslogs-stream: "${STACK_NAME}_backend"
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK}
      - default

  frontend:
    image: 'openstax/corgi-${DOCKER_IMAGE_FRONTEND}:${TAG-latest}'
    deploy:
      labels:
        - traefik.frontend.rule=PathPrefix:/
        - traefik.enable=true
        - traefik.port=80
        - traefik.tags=${TRAEFIK_TAG}
        - traefik.frontend.auth.basic.usersFile=/run/secrets/basic-auth-users
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    logging:
      options:
        awslogs-stream: "${STACK_NAME}_frontend"
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK}
      - default
      
networks:
  traefik-public:
    external: true
secrets:
  basic-auth-users:
    external: true

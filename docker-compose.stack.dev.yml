version: '3.7'
services:
  proxy:
    image: traefik:v1.7
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --docker \
      --docker.watch \
      --docker.exposedbydefault=false \
      --constraints=tag==${TRAEFIK_TAG} \
      --logLevel=DEBUG \
      --accessLog \
      --web
    labels:
      - traefik.frontend.rule=Host:${DOMAIN}
      - traefik.enable=true
      - traefik.port=80
    ports:
      - '80:80'
  
  frontend:
    build:
      context: ./frontend
      dockerfile: dev.dockerfile
      target: dev-runner
    labels:
      - traefik.frontend.rule=PathPrefix:/
      - traefik.enable=true
      - traefik.port=80
      - traefik.tags=${TRAEFIK_TAG}
    volumes:
      - ./frontend:/app
    ports:
      - '35729:35729'

  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      target: dev-runner
    volumes:
      - ./backend/app:/app
    env_file:
      - env-backend.env
    environment: &testenv
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_SERVER=${POSTGRES_SERVER:-db}
      - POSTGRES_DB=${POSTGRES_DB:-corgi_dev}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD:-trust}
      - REVISION=${REVISION}
      - TAG=${TAG}
      - STACK_NAME=${STACK_NAME}
      - DEPLOYED_AT=${DEPLOYED_AT}
    labels:
      - traefik.frontend.rule=PathPrefix:/api,/docs,/redoc,/openapi.json
      - traefik.enable=true
      - traefik.port=80
      - traefik.tags=${TRAEFIK_TAG}
    command: ./bin/prestart-dev.sh
    networks:
      default:
        aliases:
          - ${DOMAIN}

  db:
    image: postgres:12
    environment: *testenv

  docs:
    build:
      context: ./docs
    ports:
      - '8000:8000'
    volumes:
      - ./docs:/docs

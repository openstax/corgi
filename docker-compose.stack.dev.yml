version: '3.7'
services:
  proxy:
    image: traefik:v2.10
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: 
      - "--providers.docker"
      - "--providers.docker.watch"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.constraints=Label(`traefik.tags`, `${TRAEFIK_TAG}`)"
      - "--entrypoints.http.address=:80"
      - "--log.level=DEBUG"
      - "--accessLog"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    labels:
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.tags=${TRAEFIK_TAG}"
      - "traefik.enable=true"
    ports:
      # Traefik handles http
      - "80:80"
  frontend:
    build:
      context: ./frontend
      dockerfile: dev.dockerfile
    labels:
      - "traefik.http.services.corgi-frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.corgi-frontend.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.corgi-frontend.entrypoints=http"
      - "traefik.tags=${TRAEFIK_TAG}"
      - "traefik.enable=true"
    volumes:
      - ./frontend:/app
    ports:
      # This is for the live reloading (maybe add to traefik as a tcp service?)
      - '35729:35729'

  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      target: dev-runner
    volumes:
      - ./backend/app:/app
    env_file:
      - env-backend.env
    environment: &testenv
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_SERVER=${POSTGRES_SERVER:-db}
      - POSTGRES_DB=${POSTGRES_DB:-corgi_dev}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD:-trust}
      - REVISION=${REVISION}
      - TAG=${TAG}
      - STACK_NAME=${STACK_NAME}
      - DEPLOYED_AT=${DEPLOYED_AT}
    labels:
      - "traefik.http.services.corgi-backend.loadbalancer.server.port=80"
      - "traefik.http.routers.corgi-backend.rule=Host(`${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`) || PathPrefix(`/openapi.json`))"
      - "traefik.http.routers.corgi-backend.entrypoints=http"
      - "traefik.tags=${TRAEFIK_TAG}"
      - "traefik.enable=true"
    command: ./bin/prestart-dev.sh
    networks:
      default:
        aliases:
          - ${DOMAIN}

  db:
    image: postgres:12
    environment: *testenv

  docs:
    build:
      context: ./docs
    ports:
      - '8000:8000'
    volumes:
      - ./docs:/docs

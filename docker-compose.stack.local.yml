version: '3.7'
services:
  proxy:
    image: traefik:v1.7
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --docker \
      --docker.watch \
      --docker.exposedbydefault=false \
      --constraints=tag==${TRAEFIK_TAG} \
      --logLevel=DEBUG \
      --accessLog \
      --web
    labels:
      - traefik.frontend.rule=Host:${DOMAIN}
      - traefik.enable=true
      - traefik.port=80
    ports:
      - '80:80'
  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      target: dev-runner
    environment: &testenv
      - SERVER_NAME=backend
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=
      - POSTGRES_DB=tests
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TAG=dev
      - REVISION=dev
      - STACK_NAME=dev
# Uncomment line below to create Infinite loop to keep container live doing nothing
#   command: bash -c "while true; do sleep 1; done"
    command: ./bin/prestart-dev.sh
    depends_on:
      - db
    labels:
      - traefik.frontend.rule=PathPrefix:/api,/docs,/redoc,/openapi.json
      - traefik.enable=true
      - traefik.port=80
      - traefik.tags=${TRAEFIK_TAG}
    volumes:
      - ./backend/app:/app
    networks:
      default:
        aliases:
          - ${DOMAIN}
  db:
    environment: *testenv
    image: postgres:12
  frontend:
    build:
      context: ./frontend
    labels:
      - traefik.frontend.rule=PathPrefix:/
      - traefik.enable=true
      - traefik.port=80
      - traefik.tags=${TRAEFIK_TAG}
  docs:
    build:
      context: ./docs
    ports:
      - '8000:8000'
    volumes:
      - .:/app


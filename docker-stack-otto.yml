services:
  backend:
    build:
      context: /Users/om9/Documents/Projects/output-producer-service/backend
      dockerfile: backend.dockerfile
      target: dev-runner
    command: ./bin/prestart-dev.sh
    environment:
      BACKEND_CORS_ORIGINS: http://localhost, http://localhost:3000
      DEPLOYED_AT: '20210101.111111'
      JUPYTER: jupyter lab --ip=0.0.0.0 --allow-root --NotebookApp.custom_display_url=http://127.0.0.1:8888
      POSTGRES_DB: tests
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORD: ''
      POSTGRES_SERVER: db
      POSTGRES_USER: postgres
      REVISION: dev
      SERVER_HOST: http://localhost
      SERVER_NAME: localhost
      STACK_NAME: dev
      TAG: dev
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: PathPrefix:/api,/docs,/redoc,/openapi.json
      traefik.port: '80'
      traefik.tags: localhost
    networks:
      default:
        aliases:
        - localhost
    ports:
    - published: 8888
      target: 8888
    volumes:
    - /Users/om9/Documents/Projects/output-producer-service/backend/app:/app:rw
  backend-tests:
    build:
      context: /Users/om9/Documents/Projects/output-producer-service/backend
      dockerfile: tests.dockerfile
    command: bash -c "while true; do sleep 1; done"
    environment:
      BACKEND_CORS_ORIGINS: http://localhost, http://localhost:3000
      POSTGRES_DB: tests
      POSTGRES_PASSWORD: ''
      POSTGRES_SERVER: db
      POSTGRES_USER: postgres
      REVISION: dev
      SERVER_NAME: backend
      STACK_NAME: dev
      TAG: dev
    ports:
    - target: 5900
    volumes:
    - /Users/om9/Documents/Projects/output-producer-service/backend/app:/app:rw
    - /tmp/test-results:/tmp/test-results:rw
  concourse:
    command: quickstart
    environment:
      CONCOURSE_ADD_LOCAL_USER: dev:dev
      CONCOURSE_EXTERNAL_URL: http://localhost:8100
      CONCOURSE_MAIN_TEAM_LOCAL_USER: dev
      CONCOURSE_POSTGRES_DATABASE: postgres
      CONCOURSE_POSTGRES_HOST: db
      CONCOURSE_POSTGRES_PASSWORD: concourse_pass
      CONCOURSE_POSTGRES_USER: postgres
      CONCOURSE_WORKER_BAGGAGECLAIM_DRIVER: overlay
    image: concourse/concourse:6.3
    ports:
    - published: 8100
      target: 8080
    privileged: true
  db:
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: cops
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORD: ''
      POSTGRES_SERVER: db
      POSTGRES_USER: postgres
    image: postgres:12
  docs:
    build:
      context: /Users/om9/Documents/Projects/output-producer-service/docs
    ports:
    - published: 8000
      target: 8000
    volumes:
    - /Users/om9/Documents/Projects/output-producer-service:/app:rw
  frontend:
    build:
      context: /Users/om9/Documents/Projects/output-producer-service/frontend
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: PathPrefix:/
      traefik.port: '80'
      traefik.tags: localhost
  pgadmin:
    depends_on:
      db:
        condition: service_started
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cops.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: '5050'
    image: dpage/pgadmin4
    ports:
    - published: 5050
      target: 5050
  proxy:
    command: --docker \ --docker.watch \ --docker.exposedbydefault=false \ --constraints=tag==localhost
      \ --logLevel=DEBUG \ --accessLog \ --web
    image: traefik:v1.7
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: Host:localhost
      traefik.port: '80'
    ports:
    - published: 80
      target: 80
    - published: 8090
      target: 8080
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:rw
version: '3.7'

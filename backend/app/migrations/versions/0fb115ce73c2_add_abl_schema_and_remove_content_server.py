"""Add ABL schema and remove content server

Revision ID: 0fb115ce73c2
Revises: dd5b4a5068a6
Create Date: 2022-10-14 20:52:49.450306

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0fb115ce73c2'
down_revision = 'dd5b4a5068a6'
branch_labels = None
depends_on = None


repository_permission_table = sa.table('repository_permission',
    sa.column('id', sa.Integer),
    sa.column('name', sa.String),
    )



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repository',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_repository_id'), 'repository', ['id'], unique=False)
    op.create_table('repository_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_repository_permission_id'), 'repository_permission', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('avatar_url', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('commit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=True),
    sa.Column('sha', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_commit_id'), 'commit', ['id'], unique=False)
    op.create_table('user_repository',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['repository_permission.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'repository_id', 'permission_id')
    )
    op.create_index(op.f('ix_user_repository_permission_id'), 'user_repository', ['permission_id'], unique=False)
    op.create_index(op.f('ix_user_repository_user_id'), 'user_repository', ['user_id'], unique=False)
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('commit_id', sa.Integer(), nullable=False),
    sa.Column('edition', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('style', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['commit_id'], ['commit.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid', 'commit_id', name='_book_to_commit')
    )
    op.create_index(op.f('ix_book_commit_id'), 'book', ['commit_id'], unique=False)
    op.create_index(op.f('ix_book_id'), 'book', ['id'], unique=False)
    op.create_index(op.f('ix_book_uuid'), 'book', ['uuid'], unique=False)
    op.create_table('book_job',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('artifact_url', sa.String(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'job_id')
    )
    op.create_index(op.f('ix_book_job_book_id'), 'book_job', ['book_id'], unique=False)
    op.create_index(op.f('ix_book_job_job_id'), 'book_job', ['job_id'], unique=False)
    op.create_index(op.f('ix_job_types_created_at'), 'job_types', ['created_at'], unique=False)
    op.add_column('jobs', sa.Column('user_id', sa.Integer(), nullable=True))
    op.drop_index('ix_jobs_collection_id', table_name='jobs')
    op.drop_index('ix_jobs_job_type', table_name='jobs')
    op.drop_constraint('events_content_server_id_fkey', 'jobs', type_='foreignkey')
    op.create_foreign_key(None, 'jobs', 'user', ['user_id'], ['id'])
    op.drop_column('jobs', 'content_server_id')
    op.drop_column('jobs', 'pdf_url')
    op.drop_column('jobs', 'collection_id')
    op.drop_column('jobs', 'version')
    op.drop_column('jobs', 'style')
    
    op.drop_index('ix_content_servers_created_at', table_name='content_servers')
    op.drop_index('ix_content_servers_id', table_name='content_servers')
    op.drop_table('content_servers')
    bind = op.get_bind()
    insert = repository_permission_table.insert().values([
        { "id": 1, "name": "ADMIN" },
        { "id": 2, "name": "MAINTAIN" },
        { "id": 3, "name": "READ" },
        { "id": 4, "name": "TRIAGE" },
        { "id": 5, "name": "WRITE" }
    ])
    bind.execute(insert)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('jobs', sa.Column('version', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('collection_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('pdf_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('content_server_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.create_foreign_key('events_content_server_id_fkey', 'jobs', 'content_servers', ['content_server_id'], ['id'])
    op.create_index('ix_jobs_job_type', 'jobs', ['job_type_id'], unique=False)
    op.create_index('ix_jobs_collection_id', 'jobs', ['collection_id'], unique=False)
    op.drop_column('jobs', 'user_id')
    op.drop_index(op.f('ix_job_types_created_at'), table_name='job_types')
    op.create_table('content_servers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('hostname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('host_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='content_servers_pkey')
    )
    op.create_index('ix_content_servers_id', 'content_servers', ['id'], unique=False)
    op.create_index('ix_content_servers_created_at', 'content_servers', ['created_at'], unique=False)
    op.drop_index(op.f('ix_book_job_job_id'), table_name='book_job')
    op.drop_index(op.f('ix_book_job_book_id'), table_name='book_job')
    op.drop_table('book_job')
    op.drop_index(op.f('ix_book_uuid'), table_name='book')
    op.drop_index(op.f('ix_book_id'), table_name='book')
    op.drop_index(op.f('ix_book_commit_id'), table_name='book')
    op.drop_table('book')
    op.drop_index(op.f('ix_user_repository_user_id'), table_name='user_repository')
    op.drop_index(op.f('ix_user_repository_permission_id'), table_name='user_repository')
    op.drop_table('user_repository')
    op.drop_index(op.f('ix_commit_id'), table_name='commit')
    op.drop_table('commit')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_repository_permission_id'), table_name='repository_permission')
    op.drop_table('repository_permission')
    op.drop_index(op.f('ix_repository_id'), table_name='repository')
    op.drop_table('repository')
    # ### end Alembic commands ###
